<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10400.17.1103.1137                               -->
<workbook original-version='10.4' source-build='10.4.1 (10400.17.1103.1137)' source-platform='win' version='10.4' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='10.4'>
      <aliases enabled='yes' />
      <column caption='ParameterSub-Category ' datatype='string' name='[Sub-Category Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Bookcases&quot;'>
        <calculation class='tableau' formula='&quot;Bookcases&quot;' />
        <members>
          <member value='&quot;Accessories&quot;' />
          <member value='&quot;Appliances&quot;' />
          <member value='&quot;Art&quot;' />
          <member value='&quot;Binders&quot;' />
          <member value='&quot;Bookcases&quot;' />
          <member value='&quot;Chairs&quot;' />
          <member value='&quot;Copiers&quot;' />
          <member value='&quot;Envelopes&quot;' />
          <member value='&quot;Fasteners&quot;' />
          <member value='&quot;Furnishings&quot;' />
          <member value='&quot;Labels&quot;' />
          <member value='&quot;Machines&quot;' />
          <member value='&quot;Paper&quot;' />
          <member value='&quot;Phones&quot;' />
          <member value='&quot;Storage&quot;' />
          <member value='&quot;Supplies&quot;' />
          <member value='&quot;Tables&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='Orders+ (Sample - Superstore)' inline='true' name='federated.07kc39d0st4cie17emcsm04atrt2' version='10.4'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample - Superstore' name='excel-direct.19kmvnj1qem44511n9fwk1kvnval'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/training_c2d.02.11/Documents/My Tableau Repository/Datasources/10.4/en_US-US/Sample - Superstore.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Orders].[Region]' />
              <expression op='[People].[Region]' />
            </expression>
          </clause>
          <relation connection='excel-direct.19kmvnj1qem44511n9fwk1kvnval' name='Orders' table='[Orders$]' type='table'>
            <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
              <column datatype='integer' name='Row ID' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='date' name='Order Date' ordinal='2' />
              <column datatype='date' name='Ship Date' ordinal='3' />
              <column datatype='string' name='Ship Mode' ordinal='4' />
              <column datatype='string' name='Customer ID' ordinal='5' />
              <column datatype='string' name='Customer Name' ordinal='6' />
              <column datatype='string' name='Segment' ordinal='7' />
              <column datatype='string' name='Country' ordinal='8' />
              <column datatype='string' name='City' ordinal='9' />
              <column datatype='string' name='State' ordinal='10' />
              <column datatype='integer' name='Postal Code' ordinal='11' />
              <column datatype='string' name='Region' ordinal='12' />
              <column datatype='string' name='Product ID' ordinal='13' />
              <column datatype='string' name='Category' ordinal='14' />
              <column datatype='string' name='Sub-Category' ordinal='15' />
              <column datatype='string' name='Product Name' ordinal='16' />
              <column datatype='real' name='Sales' ordinal='17' />
              <column datatype='integer' name='Quantity' ordinal='18' />
              <column datatype='real' name='Discount' ordinal='19' />
              <column datatype='real' name='Profit' ordinal='20' />
            </columns>
          </relation>
          <relation connection='excel-direct.19kmvnj1qem44511n9fwk1kvnval' name='People' table='[People$]' type='table'>
            <columns gridOrigin='A1:B5:no:A1:B5:0' header='yes' outcome='6'>
              <column datatype='string' name='Person' ordinal='0' />
              <column datatype='string' name='Region' ordinal='1' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Category]' value='[Orders].[Category]' />
          <map key='[City]' value='[Orders].[City]' />
          <map key='[Country]' value='[Orders].[Country]' />
          <map key='[Customer ID]' value='[Orders].[Customer ID]' />
          <map key='[Customer Name]' value='[Orders].[Customer Name]' />
          <map key='[Discount]' value='[Orders].[Discount]' />
          <map key='[Order Date]' value='[Orders].[Order Date]' />
          <map key='[Order ID]' value='[Orders].[Order ID]' />
          <map key='[Person]' value='[People].[Person]' />
          <map key='[Postal Code]' value='[Orders].[Postal Code]' />
          <map key='[Product ID]' value='[Orders].[Product ID]' />
          <map key='[Product Name]' value='[Orders].[Product Name]' />
          <map key='[Profit]' value='[Orders].[Profit]' />
          <map key='[Quantity]' value='[Orders].[Quantity]' />
          <map key='[Region (People)]' value='[People].[Region]' />
          <map key='[Region]' value='[Orders].[Region]' />
          <map key='[Row ID]' value='[Orders].[Row ID]' />
          <map key='[Sales]' value='[Orders].[Sales]' />
          <map key='[Segment]' value='[Orders].[Segment]' />
          <map key='[Ship Date]' value='[Orders].[Ship Date]' />
          <map key='[Ship Mode]' value='[Orders].[Ship Mode]' />
          <map key='[State]' value='[Orders].[State]' />
          <map key='[Sub-Category]' value='[Orders].[Sub-Category]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U9995:no:A1:U9995:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Person</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Person]</local-name>
            <parent-name>[People]</parent-name>
            <remote-alias>Person</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region (People)]</local-name>
            <parent-name>[People]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[People]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B5:no:A1:B5:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='LENGTH' datatype='integer' name='[Calculation_1265230033115340801]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='LEN( [Customer Name])' />
      </column>
      <column caption='CHECK' datatype='string' name='[Calculation_1265230033115500546]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_1265230033115340801]==10 THEN &apos;PREMIUM&apos; ELSE &apos;DUMMY&apos; END' />
      </column>
      <column caption='CASE_CHECK' datatype='integer' name='[Calculation_1265230033118846980]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE SUM([Quantity])&#13;&#10;WHEN 40 THEN 1&#13;&#10;WHEN 50 THEN 2&#13;&#10;END' />
      </column>
      <column caption='sub cat' datatype='boolean' name='[Calculation_1265230033131573258]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Sub-Category]=[Parameters].[Sub-Category Parameter]' />
      </column>
      <column caption='Calculation1' datatype='string' name='[Calculation_1265230033143255051]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [top20]THEN &quot;TOP-20&quot; ELSE &quot;OTHERS&quot; END' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Order ID - Split 1' datatype='string' name='[Order ID - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.07kc39d0st4cie17emcsm04atrt2].[Order ID]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [Order ID], &quot;-&quot;, 1 ) )' />
      </column>
      <column datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column caption='Quantity (bin)' datatype='integer' name='[Quantity (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[Quantity]' peg='0' size='1' />
      </column>
      <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
      <column-instance column='[Calculation_1265230033115500546]' derivation='None' name='[none:Calculation_1265230033115500546:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1265230033131573258]' derivation='None' name='[none:Calculation_1265230033131573258:nk]' pivot='key' type='nominal' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
      <group name='[top20]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[Customer Name]' member='&quot;Adrian Barton&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Becky Martin&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Bill Shonely&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Caroline Jumper&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Christopher Conant&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Clay Ludtke&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Edward Hooks&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Greg Tran&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Hunter Lopez&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Karen Ferguson&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Ken Lonsdale&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Maria Etezadi&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Raymond Buch&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Sanjit Chand&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Sanjit Engle&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Sean Miller&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Seth Vernon&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Tamara Chand&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Todd Sumrall&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Tom Ashbrook&quot;' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:/Users/training_c2d.02.11/Documents/My Tableau Repository/Datasources/Orders+ (Sample - Superstore).tde' schema='Extract' tablename='Extract' update-time='12/12/2017 04:49:29 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[Category]' value='[Extract].[Category]' />
            <map key='[City]' value='[Extract].[City]' />
            <map key='[Country]' value='[Extract].[Country]' />
            <map key='[Customer ID]' value='[Extract].[Customer ID]' />
            <map key='[Customer Name]' value='[Extract].[Customer Name]' />
            <map key='[Discount]' value='[Extract].[Discount]' />
            <map key='[Number of Records]' value='[Extract].[Number of Records]' />
            <map key='[Order Date]' value='[Extract].[Order Date]' />
            <map key='[Order ID - Split 1]' value='[Extract].[Order ID - Split 1]' />
            <map key='[Order ID]' value='[Extract].[Order ID]' />
            <map key='[Person]' value='[Extract].[Person]' />
            <map key='[Postal Code]' value='[Extract].[Postal Code]' />
            <map key='[Product ID]' value='[Extract].[Product ID]' />
            <map key='[Product Name]' value='[Extract].[Product Name]' />
            <map key='[Profit]' value='[Extract].[Profit]' />
            <map key='[Quantity]' value='[Extract].[Quantity]' />
            <map key='[Region (People)]' value='[Extract].[Region]' />
            <map key='[Region]' value='[Extract].[Region1]' />
            <map key='[Row ID]' value='[Extract].[Row ID]' />
            <map key='[Sales]' value='[Extract].[Sales]' />
            <map key='[Segment]' value='[Extract].[Segment]' />
            <map key='[Ship Date]' value='[Extract].[Ship Date]' />
            <map key='[Ship Mode]' value='[Extract].[Ship Mode]' />
            <map key='[State]' value='[Extract].[State]' />
            <map key='[Sub-Category]' value='[Extract].[Sub-Category]' />
          </cols>
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
            <calculation column='[Order ID - Split 1]' formula='TRIM( SPLIT( [Order ID], &quot;-&quot;, 1 ) )' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='9994' timestamp-start='2017-12-12 04:49:29.255' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Category</remote-alias>
              <ordinal>0</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Furniture&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Technology&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>9994</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>1</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>531</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Aberdeen&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Yuma&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>9994</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>2</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;United States&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;United States&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>9994</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;United States&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Customer ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Customer ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Customer ID</remote-alias>
              <ordinal>3</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>793</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AA-10315&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;ZD-21925&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>9994</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>12</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Customer Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Customer Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Customer Name</remote-alias>
              <ordinal>4</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>793</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Aaron Bergman&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zuschuss Donatelli&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>9994</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>13</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Discount</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Discount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Discount</remote-alias>
              <ordinal>5</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>0.80000000000000004</statistic>
                <statistic aggregation='Count' datatype='integer'>9994</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>18</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>6</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>9994.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>9994</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>9994.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Order Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Order Date</remote-alias>
              <ordinal>7</ordinal>
              <family>Orders</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1237</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2014-01-03#</statistic>
                <statistic aggregation='Max' datatype='date'>#2017-12-30#</statistic>
                <statistic aggregation='Count' datatype='integer'>9994</statistic>
                <statistic aggregation='Median' datatype='date'>#2016-06-26#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Order ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Order ID</remote-alias>
              <ordinal>8</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5009</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;CA-2014-100006&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;US-2017-169551&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>9994</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>16</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Person</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Person]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Person</remote-alias>
              <ordinal>9</ordinal>
              <family>People</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Anna Andreadi&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Kelly Williams&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>9994</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Postal Code</remote-name>
              <remote-type>3</remote-type>
              <local-name>[Postal Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Postal Code</remote-alias>
              <ordinal>10</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>631</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>551572652.0</statistic>
                <statistic aggregation='Avg' datatype='real'>55190.379427656597</statistic>
                <statistic aggregation='Min' datatype='integer'>1040</statistic>
                <statistic aggregation='Max' datatype='integer'>99301</statistic>
                <statistic aggregation='Stdev' datatype='real'>32063.693350364487</statistic>
                <statistic aggregation='StdevP' datatype='real'>32062.089163078908</statistic>
                <statistic aggregation='Var' datatype='real'>1028080431.2662077</statistic>
                <statistic aggregation='VarP' datatype='real'>1027977561.501222</statistic>
                <statistic aggregation='Count' datatype='integer'>9994</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>40715111695442.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>11</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Product ID</remote-alias>
              <ordinal>11</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1862</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;FUR-BO-10000112&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;TEC-PH-10004977&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>9994</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>15</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Product Name</remote-alias>
              <ordinal>12</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1850</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;\&quot;While you Were Out\&quot; Message Book, One Form per Page&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zipper Ring Binder Pockets&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>9994</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>14</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Profit</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Profit]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Profit</remote-alias>
              <ordinal>13</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7545</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>286397.02170000126</statistic>
                <statistic aggregation='Avg' datatype='real'>28.656896307784798</statistic>
                <statistic aggregation='Min' datatype='real'>-6599.978000000001</statistic>
                <statistic aggregation='Max' datatype='real'>8399.9759999999987</statistic>
                <statistic aggregation='Stdev' datatype='real'>234.26010769095711</statistic>
                <statistic aggregation='StdevP' datatype='real'>234.24838736035863</statistic>
                <statistic aggregation='Var' datatype='real'>54877.798055378829</statistic>
                <statistic aggregation='VarP' datatype='real'>54872.306980928624</statistic>
                <statistic aggregation='Count' datatype='integer'>9994</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>556601085.72111595</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Quantity</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Quantity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Quantity</remote-alias>
              <ordinal>14</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>37873.0</statistic>
                <statistic aggregation='Avg' datatype='real'>3.7895737442465478</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>14</statistic>
                <statistic aggregation='Stdev' datatype='real'>2.2251096911413999</statistic>
                <statistic aggregation='StdevP' datatype='real'>2.2249983660786095</statistic>
                <statistic aggregation='Var' datatype='real'>4.9511131376113768</statistic>
                <statistic aggregation='VarP' datatype='real'>4.9506177290524809</statistic>
                <statistic aggregation='Count' datatype='integer'>9994</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>192999.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region (People)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>15</ordinal>
              <family>People</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Central&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;West&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>9994</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Region1</remote-alias>
              <ordinal>16</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Central&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;West&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>9994</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Row ID</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Row ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Row ID</remote-alias>
              <ordinal>17</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9994</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>49945015.0</statistic>
                <statistic aggregation='Avg' datatype='real'>4997.5</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>9994</statistic>
                <statistic aggregation='Stdev' datatype='real'>2885.1636290974325</statistic>
                <statistic aggregation='StdevP' datatype='real'>2885.0192806981377</statistic>
                <statistic aggregation='Var' datatype='real'>8324169.166666667</statistic>
                <statistic aggregation='VarP' datatype='real'>8323336.25</statistic>
                <statistic aggregation='Count' datatype='integer'>9994</statistic>
                <statistic aggregation='Median' datatype='integer'>4998</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>332783634945.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>17</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sales</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Sales]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sales</remote-alias>
              <ordinal>18</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6144</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>2297200.8602999551</statistic>
                <statistic aggregation='Avg' datatype='real'>229.85800083049381</statistic>
                <statistic aggregation='Min' datatype='real'>0.44399999999999995</statistic>
                <statistic aggregation='Max' datatype='real'>22638.48</statistic>
                <statistic aggregation='Stdev' datatype='real'>623.24510050868332</statistic>
                <statistic aggregation='StdevP' datatype='real'>623.21391876504867</statistic>
                <statistic aggregation='Var' datatype='real'>388434.45530807879</statistic>
                <statistic aggregation='VarP' datatype='real'>388395.58854248864</statistic>
                <statistic aggregation='Count' datatype='integer'>9994</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>4409655509.1482697</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Segment</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Segment]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Segment</remote-alias>
              <ordinal>19</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Consumer&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Home Office&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>9994</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ship Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Ship Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ship Date</remote-alias>
              <ordinal>20</ordinal>
              <family>Orders</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1334</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2014-01-07#</statistic>
                <statistic aggregation='Max' datatype='date'>#2018-01-05#</statistic>
                <statistic aggregation='Count' datatype='integer'>9994</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ship Mode</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Ship Mode]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ship Mode</remote-alias>
              <ordinal>21</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;First Class&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Standard Class&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>9994</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>22</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>49</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Alabama&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Wyoming&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>9994</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sub-Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Sub-Category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sub-Category</remote-alias>
              <ordinal>23</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Accessories&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Tables&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>9994</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order ID - Split 1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Order ID - Split 1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Order ID - Split 1</remote-alias>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;CA&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;US&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>9994</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;CA&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.561644' group-percentage='0.0525114' measure-ordering='alphabetic' measure-percentage='0.333333' parameter-percentage='0.0525114' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_1265230033115500546:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;DUMMY&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;PREMIUM&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_1265230033131573258:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>true</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Sub-Category:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Phones&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Appliances&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Accessories&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Binders&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Copiers&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Art&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Storage&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Bookcases&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:State:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='ParameterSub-Category ' datatype='string' name='[Sub-Category Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Bookcases&quot;'>
          <calculation class='tableau' formula='&quot;Bookcases&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.07kc39d0st4cie17emcsm04atrt2' />
          </datasources>
          <datasource-dependencies datasource='federated.07kc39d0st4cie17emcsm04atrt2'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[pcdf:sum:Sales:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.07kc39d0st4cie17emcsm04atrt2].[pcdf:sum:Sales:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.07kc39d0st4cie17emcsm04atrt2].[pcdf:sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.07kc39d0st4cie17emcsm04atrt2].[none:Sub-Category:nk]</rows>
        <cols>[federated.07kc39d0st4cie17emcsm04atrt2].[mn:Order Date:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.07kc39d0st4cie17emcsm04atrt2' />
          </datasources>
          <datasource-dependencies datasource='federated.07kc39d0st4cie17emcsm04atrt2'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='date' name='[Ship Date]' role='dimension' type='ordinal' />
            <column-instance column='[Sales]' derivation='Sum' name='[cum:sum:Sales:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column-instance column='[Ship Date]' derivation='Month' name='[mn:Ship Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.07kc39d0st4cie17emcsm04atrt2].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.07kc39d0st4cie17emcsm04atrt2].[cum:sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.07kc39d0st4cie17emcsm04atrt2].[cum:sum:Sales:qk] + [federated.07kc39d0st4cie17emcsm04atrt2].[sum:Sales:qk])</rows>
        <cols>[federated.07kc39d0st4cie17emcsm04atrt2].[mn:Ship Date:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='3'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.07kc39d0st4cie17emcsm04atrt2' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='ParameterSub-Category ' datatype='string' name='[Sub-Category Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Bookcases&quot;'>
              <calculation class='tableau' formula='&quot;Bookcases&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.07kc39d0st4cie17emcsm04atrt2'>
            <column caption='sub cat' datatype='boolean' name='[Calculation_1265230033131573258]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Sub-Category]=[Parameters].[Sub-Category Parameter]' />
            </column>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1265230033131573258]' derivation='None' name='[none:Calculation_1265230033131573258:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.07kc39d0st4cie17emcsm04atrt2].[none:Calculation_1265230033131573258:nk]'>
            <groupfilter function='member' level='[none:Calculation_1265230033131573258:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.07kc39d0st4cie17emcsm04atrt2].[none:Calculation_1265230033131573258:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.07kc39d0st4cie17emcsm04atrt2].[none:Sub-Category:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.07kc39d0st4cie17emcsm04atrt2].[sum:Sales:qk]</rows>
        <cols>[federated.07kc39d0st4cie17emcsm04atrt2].[none:Calculation_1265230033131573258:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='4'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.07kc39d0st4cie17emcsm04atrt2' />
          </datasources>
          <datasource-dependencies datasource='federated.07kc39d0st4cie17emcsm04atrt2'>
            <column caption='Calculation1' datatype='string' name='[Calculation_1265230033143255051]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [top20]THEN &quot;TOP-20&quot; ELSE &quot;OTHERS&quot; END' />
            </column>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column-instance column='[top20]' derivation='InOut' name='[io:top20:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1265230033143255051]' derivation='None' name='[none:Calculation_1265230033143255051:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order ID]' derivation='None' name='[none:Order ID:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.07kc39d0st4cie17emcsm04atrt2].[top20]' />
          <slices>
            <column>[federated.07kc39d0st4cie17emcsm04atrt2].[top20]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.07kc39d0st4cie17emcsm04atrt2].[io:top20:nk]' value='159' />
            <format attr='width' field='[federated.07kc39d0st4cie17emcsm04atrt2].[none:Calculation_1265230033143255051:nk]' value='120' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.07kc39d0st4cie17emcsm04atrt2].[none:Calculation_1265230033143255051:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.07kc39d0st4cie17emcsm04atrt2].[none:Order ID:nk]</rows>
        <cols>([federated.07kc39d0st4cie17emcsm04atrt2].[none:Calculation_1265230033143255051:nk] / [federated.07kc39d0st4cie17emcsm04atrt2].[io:top20:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='5'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.07kc39d0st4cie17emcsm04atrt2' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.07kc39d0st4cie17emcsm04atrt2'>
            <column caption='Quantity (bin)' datatype='integer' name='[Quantity (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Quantity]' peg='0' size='1' />
            </column>
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Quantity (bin)]' derivation='None' name='[none:Quantity (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.07kc39d0st4cie17emcsm04atrt2].[none:Quantity (bin):ok]'>
            <groupfilter function='member' level='[none:Quantity (bin):ok]' member='5' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.07kc39d0st4cie17emcsm04atrt2].[none:State:nk]' direction='DESC' using='[federated.07kc39d0st4cie17emcsm04atrt2].[sum:Sales:qk]' />
          <slices>
            <column>[federated.07kc39d0st4cie17emcsm04atrt2].[none:Quantity (bin):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.07kc39d0st4cie17emcsm04atrt2].[sum:Sales:qk]' num-steps='5' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.07kc39d0st4cie17emcsm04atrt2].[none:State:nk]' />
              <lod column='[federated.07kc39d0st4cie17emcsm04atrt2].[none:State:nk]' />
              <size column='[federated.07kc39d0st4cie17emcsm04atrt2].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='3.0386741161346436' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.07kc39d0st4cie17emcsm04atrt2].[none:Quantity (bin):ok] * [federated.07kc39d0st4cie17emcsm04atrt2].[Latitude (generated)])</rows>
        <cols>[federated.07kc39d0st4cie17emcsm04atrt2].[Longitude (generated)]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='Orders+ (Sample - Superstore)' name='federated.07kc39d0st4cie17emcsm04atrt2' />
      </datasources>
      <datasource-dependencies datasource='federated.07kc39d0st4cie17emcsm04atrt2'>
        <column caption='Quantity (bin)' datatype='integer' name='[Quantity (bin)]' role='dimension' type='ordinal'>
          <calculation class='bin' decimals='0' formula='[Quantity]' peg='0' size='1' />
        </column>
        <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
        <column-instance column='[Quantity (bin)]' derivation='None' name='[none:Quantity (bin):ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type='layout-basic' w='82400' x='800' y='1000'>
              <zone h='98000' id='3' name='2' w='11467' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='0' id='4' name='3' w='27470' x='28265' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='0' id='10' name='4' w='27470' x='28265' y='99000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='11' name='5' w='70933' x='12267' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='1' name='1' w='70933' x='12267' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='5750' id='8' name='3' pane-specification-id='0' param='[federated.07kc39d0st4cie17emcsm04atrt2].[none:Sub-Category:nk]' type='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9375' id='9' mode='slider' param='[Parameters].[Sub-Category Parameter]' type='paramctrl' w='16000' x='83200' y='6750'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='33562' id='12' name='5' param='[federated.07kc39d0st4cie17emcsm04atrt2].[none:Quantity (bin):ok]' type='filter' w='16000' x='83200' y='16125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='15750' id='13' name='5' pane-specification-id='0' param='[federated.07kc39d0st4cie17emcsm04atrt2].[sum:Sales:qk]' type='size' w='16000' x='83200' y='49687'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='33563' id='14' name='5' pane-specification-id='0' param='[federated.07kc39d0st4cie17emcsm04atrt2].[none:State:nk]' type='color' w='16000' x='83200' y='65437'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07kc39d0st4cie17emcsm04atrt2].[mn:Order Date:ok]</field>
            <field>[federated.07kc39d0st4cie17emcsm04atrt2].[none:Customer Name:nk]</field>
            <field>[federated.07kc39d0st4cie17emcsm04atrt2].[none:Order ID:nk]</field>
            <field>[federated.07kc39d0st4cie17emcsm04atrt2].[none:Sub-Category:nk]</field>
            <field>[federated.07kc39d0st4cie17emcsm04atrt2].[usr:Calculation_1265230033118846980:qk]</field>
            <field>[federated.07kc39d0st4cie17emcsm04atrt2].[yr:Order Date:ok]</field>
            <field>[federated.07kc39d0st4cie17emcsm04atrt2].[yr:Ship Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07kc39d0st4cie17emcsm04atrt2].[tmn:Ship Date:qk]</field>
            <field>[federated.07kc39d0st4cie17emcsm04atrt2].[yr:Ship Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Sub-Category Parameter]' type='parameter' />
            <card pane-specification-id='0' param='[federated.07kc39d0st4cie17emcsm04atrt2].[none:Sub-Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07kc39d0st4cie17emcsm04atrt2].[none:Calculation_1265230033131573258:nk]</field>
            <field>[federated.07kc39d0st4cie17emcsm04atrt2].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
          <strip size='100'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07kc39d0st4cie17emcsm04atrt2].[io:top20:nk]</field>
            <field>[federated.07kc39d0st4cie17emcsm04atrt2].[none:Calculation_1265230033143255051:nk]</field>
            <field>[federated.07kc39d0st4cie17emcsm04atrt2].[none:Customer Name:nk]</field>
            <field>[federated.07kc39d0st4cie17emcsm04atrt2].[none:Order ID:nk]</field>
            <field>[federated.07kc39d0st4cie17emcsm04atrt2].[top20]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.07kc39d0st4cie17emcsm04atrt2].[none:Quantity (bin):ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.07kc39d0st4cie17emcsm04atrt2].[sum:Sales:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.07kc39d0st4cie17emcsm04atrt2].[none:State:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07kc39d0st4cie17emcsm04atrt2].[none:Customer Name:nk]</field>
            <field>[federated.07kc39d0st4cie17emcsm04atrt2].[none:Quantity (bin):ok]</field>
            <field>[federated.07kc39d0st4cie17emcsm04atrt2].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='1' />
        <viewpoint name='2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='3'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.07kc39d0st4cie17emcsm04atrt2].[none:Sub-Category:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='4' />
        <viewpoint name='5'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.07kc39d0st4cie17emcsm04atrt2].[none:State:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='1' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='2' width='192'>
      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
      bv1/PgVUzDvWmvYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='3' width='130'>
      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
    </thumbnail>
    <thumbnail height='192' name='4' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='5' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 6' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
